/*
 * Author   :   jignesh1604
 * College  :   SVNIT
 */
 
 
#include<bits/stdc++.h>
using namespace std;
#define FAST ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
 
#define pb push_back
#define sz size()
#define ff first
#define ss second
#define ll long long int
#define ld long double
#define bp __builtin_popcountll
#define FOR(i,a,b) for(i=a;i<b;i++)
#define ROR(i,a,b) for(i=a;i>b;i--)
#define FORE(i,a,b) for(i=a;i<=b;i++)
#define RORE(i,a,b) for(i=a;i>=b;i--)
#define pii pair<int,int>
#define pll pair<ll,ll>
const ll M=1e9+7;

bool isprime(ll n)
{
    for(ll i=2;i<=sqrt(n);i++)
    {
        if(n%i==0)
            return false;
    }
    return true;
}

bool sortbysec(const pair<ll,ll> &a,const pair<ll,ll> &b)
{
    if(a.first<b.first)
        return true;
    else if(a.first==b.first)
    {
        if(a.second<b.second)
            return true;
        else 
            return false;
    }
    else 
        return false;
}

bool sortbysec1(const pair<ll,ll> &a,const pair<ll,ll> &b)
{
    if(a.first<b.first)
        return true;
    else if(a.first==b.first)
    {
        if(a.second>b.second)
            return true;
        else 
            return false;
    }
    else
    {
            return false;
    }
    
}
// fflush(stdout)

vector<vector<ll>> adj;
vector<bool> visited;

void bfs(ll node)
{
    queue<ll> q;
    q.push(node);
    visited[node]=true;
    cout<<node<<" ";
    while(!q.empty())
    {
        // cout<<q.front()<<" ";
        ll x=q.front(),i;
        q.pop();
        FOR(i,0,adj[x].sz)
        {
            if(!visited[adj[x][i]]){
                q.push(adj[x][i]);
                visited[adj[x][i]]=true;
                cout<<adj[x][i]<<" ";
            }
        }

    }
}

int main()
{
    FAST;
    ll t;
    cin>>t;
    while(--t>=0)
    {
    ll n,m,x,y,i;
    cin>>n>>m;
    adj=vector<vector<ll>>(n+1);
    visited=vector<bool>(n+1);
    FOR(i,0,m)
    {
        cin>>x>>y;
        adj[x].pb(y);
    }
    bfs(0);
    cout<<"\n";
    }
}
    
